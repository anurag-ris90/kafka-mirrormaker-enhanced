# Enhanced MirrorMaker 2 Configuration
# Source and target cluster configurations

# Cluster aliases
clusters = primary, standby
primary.bootstrap.servers = primary-kafka:29092
standby.bootstrap.servers = standby-kafka:29093

# Enable replication flows
primary->standby.enabled = true

# Consumer configs for source cluster
primary.consumer.group.id = mm2-consumer-group
primary.consumer.auto.offset.reset = earliest
primary.consumer.enable.auto.commit = false

# Producer configs for target cluster
standby.producer.acks = all
standby.producer.retries = 3
standby.producer.batch.size = 16384
standby.producer.linger.ms = 5

# Connector configurations
connector.class = org.apache.kafka.connect.mirror.MirrorSourceConnector
tasks.max = 1

# Topic replication settings
topics = commit-log
topics.blacklist = .*[\-\.]internal, .*\.replica, __.*

# Replication policy
replication.policy.class = org.apache.kafka.connect.mirror.DefaultReplicationPolicy

# Offset sync settings
emit.offset-syncs.enabled = true
offset-syncs.topic.replication.factor = 1

# Checkpoint settings
emit.checkpoints.enabled = true
checkpoints.topic.replication.factor = 1

# Heartbeat settings
emit.heartbeats.enabled = true
heartbeats.topic.replication.factor = 1

# Enhanced fault tolerance settings
consumer.poll.timeout.ms = 5000
refresh.topics.enabled = true
refresh.topics.interval.seconds = 30

# Connect worker settings
key.converter = org.apache.kafka.connect.converters.ByteArrayConverter
value.converter = org.apache.kafka.connect.converters.ByteArrayConverter
header.converter = org.apache.kafka.connect.converters.ByteArrayConverter

# Offset storage (using Kafka)
offset.storage.topic = mm2-offset-syncs
offset.storage.replication.factor = 1

# Config storage (using Kafka)
config.storage.topic = mm2-configs
config.storage.replication.factor = 1

# Status storage (using Kafka)
status.storage.topic = mm2-status
status.storage.replication.factor = 1